<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Dasparc Capital - Trading Journal</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      background-color: #f8f9fa;
      font-family: 'Segoe UI', sans-serif;
    }
    h1 {
      background: linear-gradient(90deg, #1507da, #f00b0b);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      font-size: 2.5rem;
      font-weight: 700;
      animation: fadeIn 1.5s ease-in-out;
    }
    .summary-card {
      background-color: #ffffff;
      border-radius: 0.5rem;
      box-shadow: 0 4px 8px rgba(0,0,0,0.05);
      padding: 1rem;
      text-align: center;
    }
    .profit { background-color: #d4edda !important; }
    .loss { background-color: #f8d7da !important; }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .chart-container { background: #fff; padding: 1rem; border-radius: 8px; box-shadow: 0 2px 6px rgba(0,0,0,0.1); }
  </style>
</head>
<body>
<div class="container py-4">
  <div class="text-center mb-4">
    <h1>DASPARC CAPITAL</h1>
    <p class="lead">Trading Journal Dashboard</p>
  </div>

  <div class="row g-3 mb-4">
    <div class="col-md-3"><div class="summary-card" id="totalTrades">Total Trades: </div></div>
    <div class="col-md-3"><div class="summary-card" id="winRate">Win Rate: </div></div>
    <div class="col-md-3"><div class="summary-card" id="totalPnL">Total P&L (INR): </div></div>
    <div class="col-md-3"><div class="summary-card" id="avgRRR">Avg RRR: </div></div>
    <div class="col-md-3"><div class="summary-card" id="avgPnL">Avg P&L/Trade (INR): </div></div>
  </div>

  <div class="mb-5 chart-container">
    <h4>Profit/Loss Chart (INR)</h4>
    <canvas id="pnlChart"></canvas>
  </div>

  <h4>Trading Journal Table</h4>
  <div style="overflow-x: auto">
    <table class="table table-bordered table-striped" id="journal-table">
      <thead class="table-dark"></thead>
      <tbody></tbody>
    </table>
  </div>
</div>

<script>
  fetch('trading_journal.csv')
    .then(response => response.text())
    .then(data => {
      const rows = data.trim().split('\n').map(r => r.split(','));
      const headers = rows[0];
      const entries = rows.slice(1);
      const tbody = document.querySelector('#journal-table tbody');
      const thead = document.querySelector('#journal-table thead');

      let wins = 0, totalRRR = 0, totalPnL = 0;
      const pnlChartData = [];
      const rates = { USD: 83, INR: 1, EUR: 90, GBP: 96 };

      const resultIndex = headers.indexOf('Result');
      const rrrIndex = headers.indexOf('RRR');
      const pnlIndex = headers.indexOf('P&L ($)');
      const currencyIndex = headers.indexOf('Currency');

      const headerRow = document.createElement('tr');
      headers.forEach(h => {
        const th = document.createElement('th');
        th.textContent = h;
        headerRow.appendChild(th);
      });
      thead.appendChild(headerRow);

      entries.forEach(entry => {
        const result = entry[resultIndex];
        const rrr = parseFloat(entry[rrrIndex]) || 0;
        const pnl = parseFloat(entry[pnlIndex]) || 0;
        const currency = entry[currencyIndex] || 'USD';
        const rate = rates[currency] || 1;
        const pnlInr = pnl * rate;

        if (result === 'Win') wins++;
        totalRRR += rrr;
        totalPnL += pnlInr;
        pnlChartData.push(pnlInr);

        const row = document.createElement('tr');
        entry.forEach((cell, i) => {
          const td = document.createElement('td');

          if (headers[i] === 'P&L ($)') {
            const val = parseFloat(cell) * (rates[entry[currencyIndex]] || 1);
            td.textContent = val.toFixed(2);
            td.className = val >= 0 ? 'profit' : 'loss';
          } else {
            td.textContent = cell;
          }

          row.appendChild(td);
        });
        tbody.appendChild(row);
      });

      const totalTrades = entries.length;
      document.getElementById('totalTrades').textContent = `Total Trades: ${totalTrades}`;
      document.getElementById('winRate').textContent = `Win Rate: ${(wins / totalTrades * 100).toFixed(2)}%`;
      document.getElementById('totalPnL').textContent = `Total P&L (INR): ₹${totalPnL.toFixed(2)}`;
      document.getElementById('avgRRR').textContent = `Avg RRR: ${(totalRRR / totalTrades).toFixed(2)}`;
      document.getElementById('avgPnL').textContent = `Avg P&L/Trade (INR): ₹${(totalPnL / totalTrades).toFixed(2)}`;

      new Chart(document.getElementById('pnlChart').getContext('2d'), {
        type: 'bar',
        data: {
          labels: entries.map(e => e[0]),
          datasets: [{
            label: 'P&L (INR)',
            data: pnlChartData,
            backgroundColor: pnlChartData.map(v => v >= 0 ? 'green' : 'red')
          }]
        },
        options: { responsive: true, plugins: { legend: { display: false } } }
      });
    });
</script>
</body>
</html>
